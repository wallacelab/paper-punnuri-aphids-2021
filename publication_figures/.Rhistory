trait_name=traits[1]
glm_file=glm_files[2]
trait_name=traits[2]
farm_file=farm_files[2]
# Load in data
cat("Plotting data for",trait_name, "\n")
glm = load_glm(glm_file, debug=args$debug)
farm = load_farm(farm_file)
# Subset out permutation significance
glm.sig = subset(glm, glm$perm_p <= args$perm_cutoff)
# Reformat RMIP data
farm.all = farm # Backup of complete RMIP data
farm = subset(farm, farm$rmip >= args$rmip_cutoff)
# Set up plotting colors
chrom_colors=RColorBrewer::brewer.pal(3, "Set1")[1:2]
my_alpha = 0.5
if(all(glm$Pos==1)){ # Set alpha to 0 for GLM if is a dummy dataset (all positions at 1)
my_alpha=0
}
# Basic plotting
myplot = ggplot(glm, mapping=aes(x=get_offset(Chr, Pos), y=log.p, color=(Chr%%2 == 0))) +
geom_point(alpha=my_alpha) +  # Make a scatterplot
scale_color_manual(values=chrom_colors) +
theme_few() + # Low-clutter theme
scale_x_continuous(breaks=offsets$midpoint, minor_breaks = offsets$offset, labels=rownames(offsets)) +  # Set labels and line positions for X axis
theme(legend.position = "none") +  # Turn off legend
labs(x="Chromosome", y=expression(bold(paste("-", log[10], " p-value (GLM)")))) + # X and Y axis labels
ggtitle(trait_name) +
theme(title = element_text(size=10, face='bold')) # Set title
myplot
# Add significant GLM hits
myplot = myplot +
geom_point(data=glm.sig, size=2, color='black', fill=alpha('white', 0), shape=21, stroke=1.5)
# Add right Y axis to plot
if(nrow(farm.all)>0){
farm.max = max(farm.all$rmip)
}else{
farm.max=1
}
scale_trans = farm.max / max(glm$log.p)
myplot = myplot +
scale_y_continuous(sec.axis = sec_axis(trans = ~. * scale_trans, name="RMIP (FARM-CPU)"))
myplot
dim(farm.all)
# Cumulative Farm-CPU distribution
if(nrow(farm.all) > 0){
cum_color='gray35'
for(mychrom in rownames(offsets)){
# Get cumulative RMIP values
mypoints = data.frame(Chr=mychrom, Pos=seq(0, offsets[mychrom, "length"], by=args$step), cum_rmip=0)
for(i in 1:nrow(mypoints)){
mypos = mypoints[i, "Pos"]
nearby_hits = subset(farm.all, farm.all$Chr==mychrom &
abs(farm.all$Pos - mypos) <= args$winsize/2)
mypoints$cum_rmip[i] = sum(nearby_hits$rmip)
}
# Get translated Y values
mypoints$rmip.plot = rescale(mypoints$cum_rmip, from=c(0, max(farm.all$rmip)), to=c(0, max(glm$log.p)))
# Add to plot
myplot = myplot +
geom_line(data=mypoints, mapping=aes(y=rmip.plot), color=cum_color, size=0.35)
}
# Add horizontal reference line
ref_line_y = rescale(args$rmip_cutoff, from=c(0, max(farm.all$rmip)), to=c(0, max(glm$log.p)))
myplot = myplot +
geom_hline(yintercept=ref_line_y, color=cum_color, size=0.35, linetype="dashed")
}
myplopt
myplot
# Significant FarmCPU hits by RMIP
if(nrow(farm) > 0){
farm$rmip.plot = rescale(farm$rmip, from=c(0, max(farm$rmip)), to=c(0, max(glm$log.p)))
rmip_color="black"
myplot = myplot +
#geom_segment(data=farm, mapping=aes(xend=get_offset(Chr, Pos), y=0, yend=rmip.plot), color=rmip_color, size=0.5) +
geom_point(data=farm, mapping=aes(y=rmip.plot), size=2, color=rmip_color, fill=rmip_color, shape=25)
}
nrow(farm)
# Load helper functions
source('0_MakeManhattanPlot.r')
png("Figure - Drone Manhattan plots (flowering covariate).png", width=out.width, height=5.5, units="in", res=out.dpi)
get_plots(c("NDRE (flowering covariate)", "NDVI (flowering covariate)", "SAVI (flowering covariate)"))
dev.off()
# Flowering + Height
png("Figure - Flowering and Height Manhattan plots.png", width=out.width, height=4, units="in", res=out.dpi)
get_plots(c("Flowering Time", "Plant Height (log)"))
dev.off()
?grid.arrange
# Helper function to make plots for each phenotype
get_plots = function(traits){
file.info = pheno_name_key[traits]
glm_files = paste("Results_GLM/glm_results.",file.info,".csv.gz", sep='')
farm_files = paste("Results_FarmCPU/1e_",file.info,".p05.rmip05.csv", sep='')
# Make plots
myplots=list()
for(i in 1:length(traits)){
myplots[[i]] = plot_manhattan(traits[i], glm_files[i], farm_files[i], args)
}
grid.arrange(grobs=myplots, ncol=1, bottom="Chromosome")
}
# Flowering + Height
png("Figure - Flowering and Height Manhattan plots.png", width=out.width, height=4, units="in", res=out.dpi)
get_plots(c("Flowering Time", "Plant Height (log)"))
dev.off()
# Helper function to make plots for each phenotype
get_plots = function(traits){
file.info = pheno_name_key[traits]
glm_files = paste("Results_GLM/glm_results.",file.info,".csv.gz", sep='')
farm_files = paste("Results_FarmCPU/1e_",file.info,".p05.rmip05.csv", sep='')
# Make plots
myplots=list()
for(i in 1:length(traits)){
myplots[[i]] = plot_manhattan(traits[i], glm_files[i], farm_files[i], args)
}
# Arrange into grid
chrom_label=text_grob("Chromosome", size = 15, face = "bold")
grid.arrange(grobs=myplots, ncol=1, bottom=chrom_label)
}
png("Figure - Flowering and Height Manhattan plots.png", width=out.width, height=4, units="in", res=out.dpi)
get_plots(c("Flowering Time", "Plant Height (log)"))
dev.off()
?textGRob
?textGrob
library(ggpubr)
# Flowering + Height
png("Figure - Flowering and Height Manhattan plots.png", width=out.width, height=4, units="in", res=out.dpi)
get_plots(c("Flowering Time", "Plant Height (log)"))
dev.off()
?text_grob
# Load helper functions
source('0_MakeManhattanPlot.r')
# Helper function to make plots for each phenotype
get_plots = function(traits){
file.info = pheno_name_key[traits]
glm_files = paste("Results_GLM/glm_results.",file.info,".csv.gz", sep='')
farm_files = paste("Results_FarmCPU/1e_",file.info,".p05.rmip05.csv", sep='')
# Make plots
myplots=list()
for(i in 1:length(traits)){
myplots[[i]] = plot_manhattan(traits[i], glm_files[i], farm_files[i], args)
}
# Arrange into grid
chrom_label=text_grob("Chromosome", size = 12, face = "bold")
left_label =text_grob(expression(paste("-", log[10], " p-value (GLM)")), size = 12, face = "bold")
grid.arrange(grobs=myplots, ncol=1, bottom=chrom_label)
}
# Flowering + Height
png("Figure - Flowering and Height Manhattan plots.png", width=out.width, height=4, units="in", res=out.dpi)
get_plots(c("Flowering Time", "Plant Height (log)"))
dev.off()
# Load helper functions
source('0_MakeManhattanPlot.r')
offsets = load_offsets(args$offsets)
# Phenotypes
pheno_name_key=c("Flowering Time" = "FLoweringtime",
"Greenhouse Damage" = "GHD",
"Plant Height (log)" = "Log_2019.2020_PH",
"D1 Aphid Count (log)" = "Log_D1_2019.2020AC",
"D1 Aphid Damage (log)" = "Log_D1_2019.2020",
"D2 Aphid Count (log)" = "Log_D2_2019.2020AC",
"D2 Aphid Damage (log)" = "Log_D2_2019.2020",
"NDRE" = "NDREAug25",
"NDVI" = "NDVIAug25",
"SAVI" = "SAVI_Aug25",
"NDRE (flowering covariate)" = "NDREAug25.with_flowering",
"NDVI (flowering covariate)" = "NDVIAug25.with_flowering",
"SAVI (flowering covariate)" = "SAVI_Aug25.with_flowering")
# Helper function to make plots for each phenotype
get_plots = function(traits){
file.info = pheno_name_key[traits]
glm_files = paste("Results_GLM/glm_results.",file.info,".csv.gz", sep='')
farm_files = paste("Results_FarmCPU/1e_",file.info,".p05.rmip05.csv", sep='')
# Make plots
myplots=list()
for(i in 1:length(traits)){
myplots[[i]] = plot_manhattan(traits[i], glm_files[i], farm_files[i], args)
}
# Arrange into grid
chrom_label=text_grob("Chromosome", size = 12, face = "bold")
left_label =text_grob(expression(paste("-", log[10], " p-value (GLM)")), size = 12, face = "bold")
grid.arrange(grobs=myplots, ncol=1, bottom=chrom_label)
}
# Flowering + Height
png("Figure - Flowering and Height Manhattan plots.png", width=out.width, height=4, units="in", res=out.dpi)
get_plots(c("Flowering Time", "Plant Height (log)"))
dev.off()
# Helper function to make plots for each phenotype
get_plots = function(traits){
file.info = pheno_name_key[traits]
glm_files = paste("Results_GLM/glm_results.",file.info,".csv.gz", sep='')
farm_files = paste("Results_FarmCPU/1e_",file.info,".p05.rmip05.csv", sep='')
# Make plots
myplots=list()
for(i in 1:length(traits)){
myplots[[i]] = plot_manhattan(traits[i], glm_files[i], farm_files[i], args)
}
# Arrange into grid
chrom_label=text_grob("Chromosome", size = 12, face = "bold")
left_label =text_grob(expression(paste("-", log[10], " p-value (GLM)")), size = 12, face = "bold")
grid.arrange(grobs=myplots, ncol=1, bottom=chrom_label, left=left_label)
}
# Flowering + Height
png("Figure - Flowering and Height Manhattan plots.png", width=out.width, height=4, units="in", res=out.dpi)
get_plots(c("Flowering Time", "Plant Height (log)"))
dev.off()
# Helper function to make plots for each phenotype
get_plots = function(traits){
file.info = pheno_name_key[traits]
glm_files = paste("Results_GLM/glm_results.",file.info,".csv.gz", sep='')
farm_files = paste("Results_FarmCPU/1e_",file.info,".p05.rmip05.csv", sep='')
# Make plots
myplots=list()
for(i in 1:length(traits)){
myplots[[i]] = plot_manhattan(traits[i], glm_files[i], farm_files[i], args)
}
# Arrange into grid
chrom_label=text_grob("Chromosome", size = 12, face = "bold")
left_label =text_grob(expression(bold(paste("-", log[10], " p-value (GLM)"))), size = 12, face = "bold")
grid.arrange(grobs=myplots, ncol=1, bottom=chrom_label, left=left_label)
}
# Flowering + Height
png("Figure - Flowering and Height Manhattan plots.png", width=out.width, height=4, units="in", res=out.dpi)
get_plots(c("Flowering Time", "Plant Height (log)"))
dev.off()
?text_grob
# Helper function to make plots for each phenotype
get_plots = function(traits){
file.info = pheno_name_key[traits]
glm_files = paste("Results_GLM/glm_results.",file.info,".csv.gz", sep='')
farm_files = paste("Results_FarmCPU/1e_",file.info,".p05.rmip05.csv", sep='')
# Make plots
myplots=list()
for(i in 1:length(traits)){
myplots[[i]] = plot_manhattan(traits[i], glm_files[i], farm_files[i], args)
}
# Arrange into grid
chrom_label=text_grob("Chromosome", size = 12, face = "bold")
left_label =text_grob(expression(bold(paste("-", log[10], " p-value (GLM)"))), size = 12, rot=90)
right_label =text_grob("RMIP (FarmCPU)", size = 12, face='bold', rot=-90)
grid.arrange(grobs=myplots, ncol=1, bottom=chrom_label, left=left_label, right=right_label)
}
# Flowering + Height
png("Figure - Flowering and Height Manhattan plots.png", width=out.width, height=4, units="in", res=out.dpi)
get_plots(c("Flowering Time", "Plant Height (log)"))
dev.off()
# Load helper functions
source('0_MakeManhattanPlot.r')
# Load helper functions
source('0_MakeManhattanPlot.r')
offsets = load_offsets(args$offsets)
# Phenotypes
pheno_name_key=c("Flowering Time" = "FLoweringtime",
"Greenhouse Damage" = "GHD",
"Plant Height (log)" = "Log_2019.2020_PH",
"D1 Aphid Count (log)" = "Log_D1_2019.2020AC",
"D1 Aphid Damage (log)" = "Log_D1_2019.2020",
"D2 Aphid Count (log)" = "Log_D2_2019.2020AC",
"D2 Aphid Damage (log)" = "Log_D2_2019.2020",
"NDRE" = "NDREAug25",
"NDVI" = "NDVIAug25",
"SAVI" = "SAVI_Aug25",
"NDRE (flowering covariate)" = "NDREAug25.with_flowering",
"NDVI (flowering covariate)" = "NDVIAug25.with_flowering",
"SAVI (flowering covariate)" = "SAVI_Aug25.with_flowering")
# Helper function to make plots for each phenotype
get_plots = function(traits){
file.info = pheno_name_key[traits]
glm_files = paste("Results_GLM/glm_results.",file.info,".csv.gz", sep='')
farm_files = paste("Results_FarmCPU/1e_",file.info,".p05.rmip05.csv", sep='')
# Make plots
myplots=list()
for(i in 1:length(traits)){
myplots[[i]] = plot_manhattan(traits[i], glm_files[i], farm_files[i], args)
}
# Arrange into grid
chrom_label=text_grob("Chromosome", size = 12, face = "bold")
left_label =text_grob(expression(bold(paste("-", log[10], " p-value (GLM)"))), size = 12, rot=90)
right_label =text_grob("RMIP (FarmCPU)", size = 12, face='bold', rot=-90)
grid.arrange(grobs=myplots, ncol=1, bottom=chrom_label, left=left_label, right=right_label)
}
# Flowering + Height
png("Figure - Flowering and Height Manhattan plots.png", width=out.width, height=4, units="in", res=out.dpi)
get_plots(c("Flowering Time", "Plant Height (log)"))
dev.off()
# Aphid damage
png("Figure - Aphid Damage Manhattan plots.png", width=out.width, height=8, units="in", res=out.dpi)
get_plots(c("D1 Aphid Count (log)", "D1 Aphid Damage (log)", "D2 Aphid Damage (log)","Greenhouse Damage"))
dev.off()
# Drones
png("Figure - Drone Manhattan plots (no covariates).png", width=out.width, height=5.5, units="in", res=out.dpi)
get_plots(c("NDRE", "NDVI", "SAVI"))
dev.off()
png("Figure - Drone Manhattan plots (flowering covariate).png", width=out.width, height=5.5, units="in", res=out.dpi)
get_plots(c("NDRE (flowering covariate)", "NDVI (flowering covariate)", "SAVI (flowering covariate)"))
dev.off()
# Flowering + Height
png("Figure - Flowering and Height Manhattan plots.png", width=out.width, height=4, units="in", res=out.dpi)
get_plots(c("Flowering Time", "Plant Height (log)"))
dev.off()
#! /usr/bin/Rscript
library(gridExtra)
library(ggpubr)
options(stringsAsFactors=F)
setwd('/home/jgwall/Documents/Papers/PUNNURI_Sorghum Aphid Resistance/Figures/GWAS_combined_v1.4_composites/')
# Arguments to pass along (easier to keep in a list like this)
args=list()
args$rmip_cutoff=0.05
args$perm_cutoff=0.01
args$winsize=5e6
args$step=5e5
args$offsets="sorghum_offsets.csv"
args$debug=FALSE
# Output figure size (in inches)
out.width=8
#out.height=3 # Depends on the specific plot
out.dpi=600
# Load helper functions
source('0_MakeManhattanPlot.r')
offsets = load_offsets(args$offsets)
# Phenotypes
pheno_name_key=c("Flowering Time" = "FLoweringtime",
"Greenhouse Damage" = "GHD",
"Plant Height (log)" = "Log_2019.2020_PH",
"D1 Aphid Count (log)" = "Log_D1_2019.2020AC",
"D1 Aphid Damage (log)" = "Log_D1_2019.2020",
"D2 Aphid Count (log)" = "Log_D2_2019.2020AC",
"D2 Aphid Damage (log)" = "Log_D2_2019.2020",
"NDRE" = "NDREAug25",
"NDVI" = "NDVIAug25",
"SAVI" = "SAVI_Aug25",
"NDRE (flowering covariate)" = "NDREAug25.with_flowering",
"NDVI (flowering covariate)" = "NDVIAug25.with_flowering",
"SAVI (flowering covariate)" = "SAVI_Aug25.with_flowering")
# Helper function to make plots for each phenotype
get_plots = function(traits){
file.info = pheno_name_key[traits]
glm_files = paste("Results_GLM/glm_results.",file.info,".csv.gz", sep='')
farm_files = paste("Results_FarmCPU/1e_",file.info,".p05.rmip05.csv", sep='')
# Make plots
myplots=list()
for(i in 1:length(traits)){
myplots[[i]] = plot_manhattan(traits[i], glm_files[i], farm_files[i], args)
}
# Arrange into grid
chrom_label=text_grob("Chromosome", size = 12, face = "bold")
left_label =text_grob(expression(bold(paste("-", log[10], " p-value (GLM)"))), size = 12, rot=90)
right_label =text_grob("RMIP (FarmCPU)", size = 12, face='bold', rot=-90)
grid.arrange(grobs=myplots, ncol=1, bottom=chrom_label, left=left_label, right=right_label)
}
# Aphid damage
png("Figure - Aphid Damage Manhattan plots.png", width=out.width, height=8, units="in", res=out.dpi)
get_plots(c("D1 Aphid Count (log)", "D1 Aphid Damage (log)", "D2 Aphid Damage (log)","Greenhouse Damage"))
dev.off()
# Drones
png("Figure - Drone Manhattan plots (no covariates).png", width=out.width, height=5.5, units="in", res=out.dpi)
get_plots(c("NDRE", "NDVI", "SAVI"))
dev.off()
png("Figure - Drone Manhattan plots (flowering covariate).png", width=out.width, height=5.5, units="in", res=out.dpi)
get_plots(c("NDRE (flowering covariate)", "NDVI (flowering covariate)", "SAVI (flowering covariate)"))
dev.off()
# Flowering + Height
png("Figure - Flowering and Height Manhattan plots.png", width=out.width, height=4, units="in", res=out.dpi)
get_plots(c("Flowering Time", "Plant Height (log)"))
dev.off()
# TODO: Get legend on there somehow
?annotation_custom
# Helper function to make plots for each phenotype
get_plots = function(traits){
file.info = pheno_name_key[traits]
glm_files = paste("Results_GLM/glm_results.",file.info,".csv.gz", sep='')
farm_files = paste("Results_FarmCPU/1e_",file.info,".p05.rmip05.csv", sep='')
# Make plots
myplots=list()
for(i in 1:length(traits)){
myplots[[i]] = plot_manhattan(traits[i], glm_files[i], farm_files[i], args)
}
# Add legend
legend=rasterGrob(readPNG(legend.file))
myplots[[1]] = myplots[[1]] +
annotation_custom(grob=legend, xmin=offsets$offset[8], xmax=offsets$offset[10],
ymin=0, ymax=10)
# Arrange into grid
chrom_label=text_grob("Chromosome", size = 12, face = "bold")
left_label =text_grob(expression(bold(paste("-", log[10], " p-value (GLM)"))), size = 12, rot=90)
right_label =text_grob("RMIP (FarmCPU)", size = 12, face='bold', rot=-90)
grid.arrange(grobs=myplots, ncol=1, bottom=chrom_label, left=left_label, right=right_label)
}
args$debug=T
# Flowering + Height
png("Figure - Flowering and Height Manhattan plots.png", width=out.width, height=4, units="in", res=out.dpi)
get_plots(c("Flowering Time", "Plant Height (log)"))
dev.off()
library(grid)
?rasteGrob
?rasterGrob
# Flowering + Height
png("Figure - Flowering and Height Manhattan plots.png", width=out.width, height=4, units="in", res=out.dpi)
get_plots(c("Flowering Time", "Plant Height (log)"))
dev.off()
library(png)
# Flowering + Height
png("Figure - Flowering and Height Manhattan plots.png", width=out.width, height=4, units="in", res=out.dpi)
get_plots(c("Flowering Time", "Plant Height (log)"))
dev.off()
legend.file="../wallace-legend.png"
# Flowering + Height
png("Figure - Flowering and Height Manhattan plots.png", width=out.width, height=4, units="in", res=out.dpi)
get_plots(c("Flowering Time", "Plant Height (log)"))
dev.off()
?arrangeGrob
# Helper function to make plots for each phenotype
get_plots = function(traits){
file.info = pheno_name_key[traits]
glm_files = paste("Results_GLM/glm_results.",file.info,".csv.gz", sep='')
farm_files = paste("Results_FarmCPU/1e_",file.info,".p05.rmip05.csv", sep='')
# Make plots
myplots=list()
for(i in 1:length(traits)){
myplots[[i]] = plot_manhattan(traits[i], glm_files[i], farm_files[i], args)
}
# Arrange into grid
chrom_label=text_grob("Chromosome", size = 12, face = "bold")
left_label =text_grob(expression(bold(paste("-", log[10], " p-value (GLM)"))), size = 12, rot=90)
right_label =text_grob("RMIP (FarmCPU)", size = 12, face='bold', rot=-90)
legend=rasterGrob(readPNG(legend.file))
grid.arrange(arrangeGrob(grobs=myplots, ncol=1), legend,
nrow=2, heights=c(10,1), bottom=chrom_label, left=left_label, right=right_label)
}
# Flowering + Height
png("Figure - Flowering and Height Manhattan plots.png", width=out.width, height=4, units="in", res=out.dpi)
get_plots(c("Flowering Time", "Plant Height (log)"))
dev.off()
# Flowering + Height
png("Figure - Flowering and Height Manhattan plots.png", width=out.width, height=4, units="in", res=out.dpi)
get_plots(c("Flowering Time", "Plant Height (log)"))
dev.off()
legend.file
# Flowering + Height
png("Figure - Flowering and Height Manhattan plots.png", width=out.width, height=4, units="in", res=out.dpi)
get_plots(c("Flowering Time", "Plant Height (log)"))
dev.off()
#! /usr/bin/Rscript
library(gridExtra)
library(ggpubr)
library(grid)
library(png)
options(stringsAsFactors=F)
setwd('/home/jgwall/Documents/Papers/PUNNURI_Sorghum Aphid Resistance/Figures/GWAS_combined_v1.4_composites/')
# Arguments to pass along (easier to keep in a list like this)
args=list()
args$rmip_cutoff=0.05
args$perm_cutoff=0.01
args$winsize=5e6
args$step=5e5
args$offsets="sorghum_offsets.csv"
args$debug=FALSE
# Output figure size (in inches)
out.width=8
#out.height=3 # Depends on the specific plot
out.dpi=600
legend.file="../wallace-legend.png"
# Load helper functions
source('0_MakeManhattanPlot.r')
offsets = load_offsets(args$offsets)
# Phenotypes
pheno_name_key=c("Flowering Time" = "FLoweringtime",
"Greenhouse Damage" = "GHD",
"Plant Height (log)" = "Log_2019.2020_PH",
"D1 Aphid Count (log)" = "Log_D1_2019.2020AC",
"D1 Aphid Damage (log)" = "Log_D1_2019.2020",
"D2 Aphid Count (log)" = "Log_D2_2019.2020AC",
"D2 Aphid Damage (log)" = "Log_D2_2019.2020",
"NDRE" = "NDREAug25",
"NDVI" = "NDVIAug25",
"SAVI" = "SAVI_Aug25",
"NDRE (flowering covariate)" = "NDREAug25.with_flowering",
"NDVI (flowering covariate)" = "NDVIAug25.with_flowering",
"SAVI (flowering covariate)" = "SAVI_Aug25.with_flowering")
# Helper function to make plots for each phenotype
get_plots = function(traits){
file.info = pheno_name_key[traits]
glm_files = paste("Results_GLM/glm_results.",file.info,".csv.gz", sep='')
farm_files = paste("Results_FarmCPU/1e_",file.info,".p05.rmip05.csv", sep='')
# Make plots
myplots=list()
for(i in 1:length(traits)){
myplots[[i]] = plot_manhattan(traits[i], glm_files[i], farm_files[i], args)
}
# Arrange into grid
chrom_label=text_grob("Chromosome", size = 12, face = "bold")
left_label =text_grob(expression(bold(paste("-", log[10], " p-value (GLM)"))), size = 12, rot=90)
right_label =text_grob("RMIP (FarmCPU)", size = 12, face='bold', rot=-90)
legend=rasterGrob(readPNG(legend.file))
grid.arrange(arrangeGrob(grobs=myplots, ncol=1), legend,
nrow=2, heights=c(10,1), bottom=chrom_label, left=left_label, right=right_label)
}
# Aphid damage
png("Figure - Aphid Damage Manhattan plots.png", width=out.width, height=8, units="in", res=out.dpi)
get_plots(c("D1 Aphid Count (log)", "D1 Aphid Damage (log)", "D2 Aphid Damage (log)","Greenhouse Damage"))
dev.off()
# Drones
png("Figure - Drone Manhattan plots (no covariates).png", width=out.width, height=5.5, units="in", res=out.dpi)
get_plots(c("NDRE", "NDVI", "SAVI"))
dev.off()
png("Figure - Drone Manhattan plots (flowering covariate).png", width=out.width, height=5.5, units="in", res=out.dpi)
get_plots(c("NDRE (flowering covariate)", "NDVI (flowering covariate)", "SAVI (flowering covariate)"))
dev.off()
# Flowering + Height
png("Figure - Flowering and Height Manhattan plots.png", width=out.width, height=4, units="in", res=out.dpi)
get_plots(c("Flowering Time", "Plant Height (log)"))
dev.off()
# TODO: Get legend on there somehow
